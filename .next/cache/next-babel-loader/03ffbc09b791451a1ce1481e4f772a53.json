{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"node-fetch\";\n\nvar StargazerCount = function StargazerCount(_ref) {\n  var stars = _ref.stars;\n  return __jsx(\"div\", null, __jsx(\"h2\", null, \"getInitialProps\"), \"Next.js Stars:\", stars);\n};\n\nStargazerCount.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, _yield$res$json, Stargazer_count;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.github.com/repos/zeit/next.js\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          _yield$res$json = _context.sent;\n          Stargazer_count = _yield$res$json.Stargazer_count;\n          return _context.abrupt(\"return\", {\n            stars: Stargazer_count\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default StargazerCount;","map":null,"metadata":{},"sourceType":"module"}